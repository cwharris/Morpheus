# SPDX-FileCopyrightText: Copyright (c) 2022-2023, NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

version: "3"

services:

  triton:
    container_name: morpheus-triton
    runtime: nvidia
    image: nvcr.io/nvidia/tritonserver:23.06-py3
    command: tritonserver --model-repository=/models/triton-model-repo --exit-on-error=false ${TRITON_MODEL_ARGS:-}
    ports:
      - 8000:8000
      - 8001:8001
      - 8002:8802
    volumes:
      - ${HOST_MORPHEUS_ROOT}/models:/models
      - ${HOST_MORPHEUS_ROOT}/examples/abp_pcap_detection/abp-pcap-xgb:/models/triton-model-repo/abp-pcap-xgb

  hydra-postgres:
    image: postgres:15.4-alpine
    container_name: morpheus-hydra-postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=hydra
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=hydra

  hydra:
    image: oryd/hydra:v2.2.0
    container_name: morpheus-hydra
    ports:
      - 4444:4444
      - 4445:4445
    command: "serve all --dev"
    environment:
      - SECRETS_SYSTEM=changethisphrase
      - DSN=postgres://hydra:secret@hydra-postgres:5432/hydra?sslmode=disable
      - URLS_SELF_ISSUER=https://hydra:4444
      - URLS_CONSENT=http://hydra-login:3000/consent
      - URLS_LOGIN=http://hydra-login:3000/login
      - HYDRA_ADMIN_URL=http://hydra:4445
      - SYSTEM_SECRET=youReallyNeedToChangeThis
      - FORCE_ROOT_CLIENT_CREDENTIALS=hydra:changeme
      - OAUTH2_SHARE_ERROR_DEBUG=1
      - OIDC_SUBJECT_TYPES_SUPPORTED=public,pairwise
      - OIDC_SUBJECT_TYPE_PAIRWISE_SALT=youReallyNeedToChangeThis
      - LOG_LEVEL=debug
    depends_on:
      - hydra-postgres

  hydra-login:
    image: oryd/hydra-login-consent-node:v2.2.0-rc.3
    container_name: morpheus-hydra-consent
    ports:
      - 3000:3000
    environment:
      - HYDRA_ADMIN_URL=https://hydra:4445
      - NODE_TLS_REJECT_UNAUTHORIZED=0
    depends_on:
      - hydra

  hydra-cli:
    image: oryd/hydra:v2.2.0
    container_name: morpheus-hydra-it
    entrypoint: sh
    environment:
      - HYDRA_ADMIN_URL=http://hydra:4445
      - LOG_LEVEL=debug
      - ORY_SDK_URL=http://hydra:4445
    depends_on:
      - hydra
    volumes:
      - ${HOST_MORPHEUS_ROOT}/.devcontainer/opt/morpheus/etc/hydra/client-broker.json:/etc/hydra/client-broker.json
      # - ${HOST_MORPHEUS_ROOT}/.devcontainer/opt/morpheus/etc/hydra/client-broker.json:/etc/hydra/client-producer.json
      # - ${HOST_MORPHEUS_ROOT}/.devcontainer/opt/morpheus/etc/hydra/client-broker.json:/etc/hydra/client-consumer.json

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: morpheus-zookeeper
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ALLOW_ANONYMOUS_LOGIN: ${KAFKA_ALLOW_ANONYMOUS_LOGIN:-yes}

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: morpheus-kafka
    ports:
      - 9092:9092
      - 29092:29092
      - 9999:9999
    environment:
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      # KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,SASL_PLAINTEXT:SASL_PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9092,SASL_PLAINTEXT://kafka:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9092,SASL_PLAINTEXT://kafka:9093
      KAFKA_SASL_ENABLED_MECHANISMS: OAUTHBEARER
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/kafka_server_jaas.conf"
      ZOOKEEPER_SASL_ENABLED: "FALSE"
      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: PLAINTEXT
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,org.apache.kafka=INFO"
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
      OAUTH_WITH_SSL: "false"
      OAUTH_LOGIN_SERVER : "hydra:4444"
      OAUTH_LOGIN_ENDPOINT : "/oauth2/token"
      OAUTH_LOGIN_GRANT_TYPE: "client_credentials"
      OAUTH_LOGIN_SCOPE: "broker.kafka"
      OAUTH_AUTHORIZATION : "Basic YnJva2VyLWthZmthOmJyb2tlci1rYWZrYQ=="
      OAUTH_INTROSPECT_SERVER : "hydra:4445"
      OAUTH_INTROSPECT_ENDPOINT : "/oauth2/introspect"
      OAUTH_INTROSPECT_AUTHORIZATION : "Basic YnJva2VyLWthZmthOmJyb2tlci1rYWZrYQ=="
    volumes:
      - ${HOST_MORPHEUS_ROOT}/.devcontainer/opt/morpheus/etc/kafka/kafka_server_jaas.conf:/etc/kafka/kafka_server_jaas.conf
    depends_on:
      - hydra
      - zookeeper

networks:
  default:
    name: morpheus
    external: true
